---

- name: "configuration play." 
  hosts: web
  user: ubuntu
  become: true
  become_method: sudo
  become_user: root  
  gather_facts: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml

  pre_tasks:
    - name: "wait 600 seconds for target connection to become reachable/usable."
      wait_for_connection:
        timeout: 600

    - name: "install python for Ansible."
      become: true
      raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python3)
      changed_when: false

  # Get the environment variables from CircleCI and add to the EC2 instance
  environment:
    - TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION')}}"  
    - AWS_ACCESS_KEY_ID: "{{ lookup('env', 'AWS_ACCESS_KEY_ID')}}" 
    - AWS_DEFAULT_REGION: "{{ lookup('env', 'AWS_DEFAULT_REGION')}}" 
    - AWS_SECRET_ACCESS_KEY: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY')}}" 
    - SLACK_ACCESS_TOKEN: "{{ lookup('env', 'SLACK_ACCESS_TOKEN')}}" 
    - SLACK_DEFAULT_CHANEL: "{{ lookup('env', 'SLACK_DEFAULT_CHANEL')}}" 
    - TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE')}}" 
    - TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES')}}" 
    - TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST')}}" 
    - TYPEORM_MIGRATIONS: "{{ lookup('env', 'TYPEORM_MIGRATIONS')}}" 
    - TYPEORM_MIGRATIONS_DIR: "{{ lookup('env', 'TYPEORM_MIGRATIONS_DIR')}}" 
    - TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD')}}" 
    - TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT')}}" 
    - TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME')}}" 
    - AWS_SESION_TOKEN: "{{ lookup('env', 'AWS_SESION_TOKEN')}}" 

  roles:
    - configure-server
    - configure-prometheus-node-exporter